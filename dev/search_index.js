var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = TimeSeriesTools","category":"page"},{"location":"#TimeSeriesTools","page":"Home","title":"TimeSeriesTools","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for TimeSeriesTools.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [TimeSeriesTools]","category":"page"},{"location":"#TimeSeriesTools.TimeDelayEmbedding-Tuple{AbstractVector}","page":"Home","title":"TimeSeriesTools.TimeDelayEmbedding","text":"TimeDelayEmbedding(Z::AbstractVector; nrow=100, method=:Forward)\n\nNOTE: The resulting matrix treats each column in the returned matrix H as an embedded featured vector.\n\n\n\n\n\n","category":"method"},{"location":"#TimeSeriesTools.fit_spherical_γ-Tuple{Any, Any, Any}","page":"Home","title":"TimeSeriesTools.fit_spherical_γ","text":"fit_spherical_γ(h, γ, params; optargs...)\n\nGiven an empirical semi-variogram γ with lags h, fit a spherical variogram model to the data with parameters params. The arguments optargs are passed to the optimize function.\n\n\n\n\n\n","category":"method"},{"location":"#TimeSeriesTools.semivariogram-Tuple{AbstractRegularTimeSeries}","page":"Home","title":"TimeSeriesTools.semivariogram","text":"semivariogram(Z::TimeSeriesTools.AbstractRegularTimeSeries; lag_ratio=0.5, lag_max=100.0)\n\nProvided a regular time series Z, compute the empirical semivariogram γ for time lags ranging from the minimum time step Δt to a maximum value. The maximum time lag is taken to be the smaller of lag_ratio times the full duration of the time series and lag_max, a user defined maximum lag time in the time units of Z.\n\nOutput\n\nReturns a tuple  (γ, h) containing the (scaled) variances and time lags.\n\n\n\n\n\n","category":"method"},{"location":"#TimeSeriesTools.times-Tuple{AbstractGenericTimeSeries}","page":"Home","title":"TimeSeriesTools.times","text":"times(series::AbstractGenericTimeSeries)\n\nGiven a timeseries series return a vector of times\n\n\n\n\n\n","category":"method"}]
}
